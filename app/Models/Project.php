<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Project extends Model
{
    use HasFactory;

    protected $fillable = [
        'title',
        'description',
        'status',
        'student_id', // ุงูููุดุฆ
        'batch_id',
        'academic_year',
        'semester', // <--- ุฃุถู ูุฐุง ุงูุณุทุฑ
        'specialization_id',
        'course_id',
        'doctor_id',
         'grade',    // ุฅุถุงูุฉ ูุฐุง
        'feedback',
        'supervision_status', // ๐ก ุฃุถู ูุฐุง ุงูุณุทุฑ ุงูููู

    ];

    // ุงูุนูุงูุฉ ูุน ุงูุทุงูุจ ุงูููุดุฆ ูููุดุฑูุน
    public function creatorStudent()
    {
        return $this->belongsTo(Student::class, 'student_id');
    }

    // ุงูุนูุงูุฉ ูุน ุงูุฏูุนุฉ
    public function batch()
    {
        return $this->belongsTo(Batch::class);
    }

    // ุงูุนูุงูุฉ ูุน ุงูุชุฎุตุต
    public function specialization()
    {
        return $this->belongsTo(Specialization::class);
    }

    public function students()
    {
    return $this->belongsToMany(Student::class, 'project_student')
                ->withPivot('is_main_creator', 'membership_status', 'created_at')
                ->withTimestamps();
    }


    // ุงูุนูุงูุฉ ูุน ุงููุงุฏุฉ
    public function course()
    {
        return $this->belongsTo(Course::class);
    }

    // ุงูุนูุงูุฉ ูุน ุงูุฏูุชูุฑ ุงููุดุฑู <--- ุฃุถู ูุฐู ุงูุนูุงูุฉ
    public function doctor()
    {
        return $this->belongsTo(Doctor::class);
    }



    // ุงูุนูุงูุฉ ูุน ุงููููุงุช ุงููุฑููุฉ
    public function files()
    {
        return $this->hasMany(ProjectFile::class);
    }

    // ุงูุนูุงูุฉ ูุน ุงูุฅุนุฌุงุจุงุช
    public function likes()
    {
        return $this->hasMany(ProjectLike::class);
    }

    // ุงูุนูุงูุฉ ูุน ุงูุชุนูููุงุช
    public function comments()
    {
        return $this->hasMany(ProjectComment::class);
    }

    // Accessor ูุญุณุงุจ ุนุฏุฏ ุงูุฅุนุฌุงุจุงุช
    public function getLikesCountAttribute()
    {
        return $this->likes()->count();
    }

    // Accessor ูุญุณุงุจ ุนุฏุฏ ุงูุชุนูููุงุช
    public function getCommentsCountAttribute()
    {
        return $this->comments()->count();
    }

    // ุฏุงูุฉ ููุชุญูู ููุง ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ุงูุญุงูู ูุฏ ุฃุนุฌุจ ุจุงููุดุฑูุน
    public function isLikedByUser($user)
    {
        if (!$user) {
            return false;
        }
        return $this->likes()->where('user_id', $user->id)->exists();
    }

    // ุฏุงูุฉ ููุชุญูู ููุง ุฅุฐุง ูุงู ุงูุทุงูุจ ูุดุงุฑููุง ูู ุงููุดุฑูุน
    public function isParticipant(Student $student)
    {
        // ุงูุชุญูู ููุง ุฅุฐุง ูุงู ุงูุทุงูุจ ูู ุงูููุดุฆ
        if ($this->student_id === $student->id) {
            return true;
        }
        // ุงูุชุญูู ููุง ุฅุฐุง ูุงู ุงูุทุงูุจ ูุดุงุฑููุง ุนุจุฑ ุงูุฌุฏูู ุงููุณูุท
        return $this->students->contains($student->id);
    }
}
